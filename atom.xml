<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>料峭春风吹酒醒</title>
  
  <subtitle>微冷</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-17T06:32:47.839Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Suika</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode刷题记录</title>
    <link href="http://yoursite.com/2020/05/17/LeetCode-Records/"/>
    <id>http://yoursite.com/2020/05/17/LeetCode-Records/</id>
    <published>2020-05-17T06:31:00.000Z</published>
    <updated>2020-05-17T06:32:47.839Z</updated>
    
    <content type="html"><![CDATA[<p>@[toc]</p><h2 id="总体进度"><a href="#总体进度" class="headerlink" title="总体进度"></a>总体进度</h2><h2 id="分类详情"><a href="#分类详情" class="headerlink" title="分类详情"></a>分类详情</h2><h3 id="简单"><a href="#简单" class="headerlink" title="简单"></a>简单</h3><h4 id="69-x-的平方根"><a href="#69-x-的平方根" class="headerlink" title="69. x 的平方根"></a>69. x 的平方根</h4><p><code>二分查找</code><br>题目：<a href="https://leetcode-cn.com/problems/sqrtx/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/sqrtx/</a><br>通过/提交：1/1<br>思路：找某个数的平方根，只需要找到一个res使得res<em>res小于等于x且(res+1)</em>(res+1)大于x即可<br>错误：没注意直接用了sqrt了…</p><h4 id="155-最小栈"><a href="#155-最小栈" class="headerlink" title="155. 最小栈"></a>155. 最小栈</h4><p>题目：<a href="https://leetcode-cn.com/problems/min-stack/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/min-stack/</a><br>通过/提交：1/2<br>思路：和普通栈最大的不同就是要能够返回栈内的最小元素。因此使用了额外空间，建立了一个有序的栈内值的数组。在栈执行push操作的时候，需要准确找到位置并把新元素推入其中，即使存在相同值也要加入；pop操作的时候，到数组内删除一个与pop元素相同的值。在getMin的时候直接返回数组第一个元素即可。</p><h4 id="136-只出现一次的数字"><a href="#136-只出现一次的数字" class="headerlink" title="136. 只出现一次的数字"></a>136. 只出现一次的数字</h4><p><code>位运算</code> <code>哈希表</code><br>题目：<a href="https://leetcode-cn.com/problems/single-number/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/single-number/</a><br>通过/提交：1/1<br>思路：骚操作，位运算异或 ^=，即一个数异或自己后为0。数字0异或任何数字都等于那个数字，直接把数组中所有元素都放在一起进行异或运算，最后得到的结果就是只出现了一次的数字。</p><h4 id="572-另一个树的子树"><a href="#572-另一个树的子树" class="headerlink" title="572. 另一个树的子树"></a>572. 另一个树的子树</h4><p><code>二叉树</code> <code>子树</code> <code>相同树</code><br>题目：<a href="https://leetcode-cn.com/problems/subtree-of-another-tree/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/subtree-of-another-tree/</a><br>通过/提交：1/2<br>思路：先说结论，一个二叉树的子树要么是它本身，要么是它左子树的子树，要么是它右子树的子树，依此规律进行递归。写成代码则为<code>isEqual(s,t) || isSubtree(s.left, t) || isSubtree(s.right, t)</code><br>注意点：在判断相等时需要注意，题目中如果树已经到达底部，再继续的话，传入的Node数据会直接为null，那么在判断相等时要考虑 ①当前节点同时为null，同时到底，相等 ②只有一个节点为null，一个还有叶子节点一个没有，不相等</p><h4 id="888-公平的糖果交换"><a href="#888-公平的糖果交换" class="headerlink" title="888. 公平的糖果交换"></a>888. 公平的糖果交换</h4><p>题目：<a href="https://leetcode-cn.com/problems/fair-candy-swap/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/fair-candy-swap/</a><br>通过/提交：1/2<br>思路：通过交换数组元素来到达和相同，因此很容易想到解题的关键在于找到两个数组和S1与S2的差值d，与需要交换的元素之间的关系。即元素a1与元素a2之间的差值，应正好为d/2，且无需考虑小数与正负的情况。<br>错误：多余地考虑了正负情况，其实两个差值的符号保持一致即可。</p><h3 id="中等"><a href="#中等" class="headerlink" title="中等"></a>中等</h3><h4 id="5-最长回文子串"><a href="#5-最长回文子串" class="headerlink" title="5. 最长回文子串"></a>5. 最长回文子串</h4><p><code>字符串</code><br>题目：<a href="https://leetcode-cn.com/problems/longest-palindromic-substring/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/longest-palindromic-substring/</a><br>通过/提交：1/3<br>思路：由于回文串以中间点为中心（1个或2个数）两边均对称，因此考虑从头开始，以1个点或2个点（p == p+1）为中心，向两侧遍历进行判断。<br>错误：忘记如果2个点为中心成立的话，需要先看看length = 2是否大于之前判断得到的maxLength</p><h4 id="50-Pow-x-n"><a href="#50-Pow-x-n" class="headerlink" title="50. Pow(x, n)"></a>50. Pow(x, n)</h4><p><code>数学</code> <code>快速幂</code><br>题目：<a href="https://leetcode-cn.com/problems/powx-n/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/powx-n/</a><br>通过/提交：1/2<br>思路：递归执行，每次都将结果拆解为 x的n次方 = （x的n/2次方）的平方【偶数】或者 （x的n-1次方）乘x【奇数 -1后又变偶数】，但注意如果是负数次幂，则是（x的n+1次方）乘1/x</p><h4 id="211-添加与搜索单词-数据结构设计"><a href="#211-添加与搜索单词-数据结构设计" class="headerlink" title="211. 添加与搜索单词 - 数据结构设计"></a>211. 添加与搜索单词 - 数据结构设计</h4><p><code>数据结构设计</code> <code>单词查找树</code><br>题目：<a href="https://leetcode-cn.com/problems/add-and-search-word-data-structure-design/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/add-and-search-word-data-structure-design/</a><br>通过/提交：0/4<br>思路：<br>错误：没太明白题干要求的addWords要求是怎么样的，搜索的部分应该是没问题了。前面搜索部分错了几次主要是将.转换为\w{1}或[a-z]{1}的过程没有思考好。</p><h4 id="221-最大正方形"><a href="#221-最大正方形" class="headerlink" title="221. 最大正方形"></a>221. 最大正方形</h4><p><code>动态规划</code> <code>图</code><br>题目：<a href="https://leetcode-cn.com/problems/maximal-square/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/maximal-square/</a><br>通过/提交：1/1<br>思路：<br>没怎么想明白，靠评论区题解过了。<br>假设每个遍历的点，都是要寻找的正方形的右下角。<br>那么对于此正方形，首先判断右下角是否缺失（0），缺失则直接为0；<br>如果不缺（1），那么它能达到的最大边长，应该是和另外三个点是右下角的正方形拼在一起后，得到的正方形边长。如果任意一个点的方形有缺失或边长较短，那么最大边长只能是这三个点的方形中<strong>较短</strong>的那个边长再+1，写成等式即为<code>dp[i][j] = Math.min(dp[i-1][j], dp[i][j-1], dp[i-1][j-1]) + 1</code>，生成dp后再从dp中遍历出最大值即为结果。</p><h4 id="236-二叉树的最近公共祖先"><a href="#236-二叉树的最近公共祖先" class="headerlink" title="236. 二叉树的最近公共祖先"></a>236. 二叉树的最近公共祖先</h4><p><code>二叉树</code> <code>LCA</code><br>题目：<a href="https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree/</a><br>通过/提交：1/2<br>思路：对于要寻找最近公共祖先的pq来说，要么左右子树一边一个，要么p或q本身就是祖先且另一个节点在左子树或右子树中。<br>因此通过递归的方式去查找 root.left 和 root.right ，直到 root = p 或 root = q（找到了）或者 root = null 没找到，递归返回后如果 left 和 right 的结果均不空，说明为第一种情况左右子树一边一个，返回 root 即为正确答案。如果left 和 right 有一边为空，一边不空，说明为第二种情况，返回不空的那个即为正确答案。</p><h4 id="390-消除游戏"><a href="#390-消除游戏" class="headerlink" title="390. 消除游戏"></a>390. 消除游戏</h4><p>题目：<a href="https://leetcode-cn.com/problems/elimination-game/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/elimination-game/</a><br>通过/提交：1/1<br>思路：由于要找的是最后剩下的那个数字，只需要让一个变量始终等于剩余数列的第一个数字即可。观察可知，当从左向右删除，或从右向左删除且数列长度为奇数时，第一个数字需要被删除，变量后移。另外可以发现第一轮删除是隔1删除，到了第二轮对于整个数列就变成了隔2删除，第三轮隔4删除，依次类推。因此每次只需要根据情况，判断变量是否需要后移，直到剩余数量为1时，返回变量。</p><h4 id="969-煎饼排序"><a href="#969-煎饼排序" class="headerlink" title="969. 煎饼排序"></a>969. 煎饼排序</h4><p><code>排序</code> <code>动态规划</code><br>题目：<a href="https://leetcode-cn.com/problems/pancake-sorting/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/pancake-sorting/</a><br>通过/提交：1/2<br>思路：和汉诺塔问题一个解法，每次都找到当前数列的最大值，如果最大值不在首位，则先将[0, maxValueIndex]进行翻转，将最大值换到首位，然后再翻转[0, length]，将最大值换到末位。递归执行[0, length - 1]的数列，直到最后数列长度为1，则排序完成。<br>错误：忘记考虑如果最大值本身就在第一位，则不需要再多执行一步。</p><h4 id="1003-检查替换后的词是否有效"><a href="#1003-检查替换后的词是否有效" class="headerlink" title="1003. 检查替换后的词是否有效"></a>1003. 检查替换后的词是否有效</h4><p><code>字符串操作</code> <code>匹配</code><br>题目：<a href="https://leetcode-cn.com/problems/check-if-word-is-valid-after-substitutions/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/check-if-word-is-valid-after-substitutions/</a><br>通过/提交：1/4<br>思路：以合法字符串作为split的分隔词，对目标字符串进行分割，余下的部分再组装后递归调用，直到字符串不再含有分隔词（split的结果集长度等于1），此时判断是否为合法字符串或空（自身就是合法串）<br>错误：一开始隐约觉得要递归处理，但是看了样例以后觉得先提交试试结果出错。另外就是没有注意自身就是合法串的情况。</p><h4 id="1023-驼峰式匹配"><a href="#1023-驼峰式匹配" class="headerlink" title="1023. 驼峰式匹配"></a>1023. 驼峰式匹配</h4><p><code>字符串操作</code> <code>匹配</code><br>题目：<a href="https://leetcode-cn.com/problems/camelcase-matching/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/camelcase-matching/</a><br>通过/提交：1/9<br>思路：通过匹配正则表达式来进行字符串的验证，需要特别注意①pattern串中可能出现全小写的情况②与其用^和$结尾来判断合法性，不如直接用substring来进行判断更有效③仔细归纳可能出现的情况④题目中只有大小写字母，不用正则表达式可能更简单<br>错误：对题目理解不清，过于急躁的提交了答案，应该更多地考虑可能出现的情况以及现阶段的驼峰匹配是什么思路。</p><h4 id="1404-将二进制表示减到-1-的步骤数"><a href="#1404-将二进制表示减到-1-的步骤数" class="headerlink" title="1404. 将二进制表示减到 1 的步骤数"></a>1404. 将二进制表示减到 1 的步骤数</h4><p>题目：<a href="https://leetcode-cn.com/problems/number-of-steps-to-reduce-a-number-in-binary-representation-to-one/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/number-of-steps-to-reduce-a-number-in-binary-representation-to-one/</a><br>通过/提交：1/2<br>思路：直接对二进制进行操作：如果末尾为0，表示偶数，直接弹出末尾（&gt;&gt; 1表示除以2）；如果末尾为1，表示奇数，需要先 +1，从后往前遇到0变1，直到遇到第一个0变1（进位）提前结束遍历。如果结束遍历仍未遇0，则需unshift以进位。<br>错误：本来想将二进制转换为十进制后再处理，但是由于题目的二进制数字最大可能有500位，超过了JS的安全数大小（53位，2的53次方），所以在超大数字处理时会有错误。</p><h3 id="困难"><a href="#困难" class="headerlink" title="困难"></a>困难</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;@[toc]&lt;/p&gt;&lt;h2 id=&quot;总体进度&quot;&gt;&lt;a href=&quot;#总体进度&quot; class=&quot;headerlink&quot; title=&quot;总体进度&quot;&gt;&lt;/a&gt;总体进度&lt;/h2&gt;&lt;h2 id=&quot;分类详情&quot;&gt;&lt;a href=&quot;#分类详情&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习记录" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="刷题" scheme="http://yoursite.com/tags/%E5%88%B7%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>如何下载B站的音视频并进行简单剪辑</title>
    <link href="http://yoursite.com/2019/09/30/download-audio-on-jijidown/"/>
    <id>http://yoursite.com/2019/09/30/download-audio-on-jijidown/</id>
    <published>2019-09-30T13:14:13.000Z</published>
    <updated>2019-09-30T13:47:04.147Z</updated>
    
    <content type="html"><![CDATA[<p>最近发现了一个B站的宝藏UP主<a href="https://space.bilibili.com/25732134?from=search&seid=6487862725407631181" target="_blank" rel="noopener">@MiDi匠做MiDi</a>，非常擅长扒音轨，并且很无私的将成果奉献出来。最喜欢就是他的 <code>周杰伦只听人声就亏了</code> 系列，全部都是精品！</p><p>但是每次上B站都麻烦，就想把音频扒下来放移动设备里听。而且因为是扒音轨的，里面还有很多乐器的分别试听，时间也比较长，还需要进行简单的剪辑。</p><a id="more"></a><h2 id="小工具列表"><a href="#小工具列表" class="headerlink" title="小工具列表"></a>小工具列表</h2><table><thead><tr><th>工具</th><th>用途</th><th>地址</th></tr></thead><tbody><tr><td>jijidown</td><td>用于解析B站文件，可以提供视频1080p、480p、音频、封面、弹幕等多种文件的下载</td><td><a href="https://www.jijidown.com/" target="_blank" rel="noopener">https://www.jijidown.com/</a></td></tr><tr><td>Online MP3 Cuter</td><td>在线的MP3剪辑和格式转换工具</td><td><a href="https://mp3cut.net/cn/" target="_blank" rel="noopener">https://mp3cut.net/cn/</a></td></tr></tbody></table><h2 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h2><ol><li>前往jijidown的主页，由于web版常常出现下载失败的问题，因此建议先下载客户端</li><li>前往B站，复制需要下载音视频的地址</li><li>打开jijidown客户端，粘贴刚才复制好的地址，回车跳转至下载页面，选择下载视频或音频</li><li>将下载好的音频导入Online MP3 Cuter中，进行简单处理</li><li>处理完成后，点击剪辑，自动开始Encoding过程，首次进行这个过程将会比较长</li><li>点击保存，选择下载目录，Done~</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近发现了一个B站的宝藏UP主&lt;a href=&quot;https://space.bilibili.com/25732134?from=search&amp;seid=6487862725407631181&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;@MiDi匠做MiDi&lt;/a&gt;，非常擅长扒音轨，并且很无私的将成果奉献出来。最喜欢就是他的 &lt;code&gt;周杰伦只听人声就亏了&lt;/code&gt; 系列，全部都是精品！&lt;/p&gt;&lt;p&gt;但是每次上B站都麻烦，就想把音频扒下来放移动设备里听。而且因为是扒音轨的，里面还有很多乐器的分别试听，时间也比较长，还需要进行简单的剪辑。&lt;/p&gt;
    
    </summary>
    
    
      <category term="日常" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="日常记录" scheme="http://yoursite.com/tags/%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/"/>
    
      <category term="防忘" scheme="http://yoursite.com/tags/%E9%98%B2%E5%BF%98/"/>
    
      <category term="小工具" scheme="http://yoursite.com/tags/%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>2019年9月21日</title>
    <link href="http://yoursite.com/2019/09/23/2019-09-21-Daily/"/>
    <id>http://yoursite.com/2019/09/23/2019-09-21-Daily/</id>
    <published>2019-09-23T13:19:53.000Z</published>
    <updated>2019-10-21T14:03:52.282Z</updated>
    
    <content type="html"><![CDATA[<p>才刚九月中旬天气就开始变化无常，前几天还是一身夏日装束，到了周末却突然凉风瑟瑟，俨然已经是初秋了。这个周末，是九九拍板决定去凤凰街压马路，一边闲逛一边吃吃喝喝。 <em>凤凰街南抵十全街，中段在原南仓桥（1958年拆除）与十梓街垂直交叉，北出干将东路。</em> 与之前去过的十全街、相门、苏州大学和平江路都很近，只需要地铁到临顿路2号口出，直行一小段就到了凤凰路与干将东路的路口了。</p><a id="more"></a><ol><li>熙盛源<br>去熙盛源大部分是因为我爸之前无意间提到想吃，而我碰巧一年前和舍友同游无锡时也去过一次，想着在苏州吃到机会难得，因此就把午饭押宝在了熙盛源。点的是<strong>小笼包</strong>，<strong>开洋拌馄饨</strong>和一碗<strong>鲜肉小馄饨</strong>，基本都是这店的招牌。吃下来特别惊艳的是开洋拌馄饨，</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;才刚九月中旬天气就开始变化无常，前几天还是一身夏日装束，到了周末却突然凉风瑟瑟，俨然已经是初秋了。这个周末，是九九拍板决定去凤凰街压马路，一边闲逛一边吃吃喝喝。 &lt;em&gt;凤凰街南抵十全街，中段在原南仓桥（1958年拆除）与十梓街垂直交叉，北出干将东路。&lt;/em&gt; 与之前去过的十全街、相门、苏州大学和平江路都很近，只需要地铁到临顿路2号口出，直行一小段就到了凤凰路与干将东路的路口了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="日常" scheme="http://yoursite.com/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="日常记录" scheme="http://yoursite.com/tags/%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>CCNA培训学习笔记</title>
    <link href="http://yoursite.com/2017/06/20/CCNA-Learning/"/>
    <id>http://yoursite.com/2017/06/20/CCNA-Learning/</id>
    <published>2017-06-20T01:59:07.000Z</published>
    <updated>2019-09-23T12:58:32.382Z</updated>
    
    <content type="html"><![CDATA[<p>Serial 串口</p><h3 id="网络接口"><a href="#网络接口" class="headerlink" title="网络接口"></a>网络接口</h3><table><thead><tr><th>以太口</th><th align="center">网线接口</th><th align="right">其他</th></tr></thead><tbody><tr><td>Ethernet</td><td align="center">以太口</td><td align="right">10M，半双工口</td></tr><tr><td>FastEthernet</td><td align="center">快速以太口</td><td align="right">100M，双工模式自适应</td></tr><tr><td>GibitEthernet</td><td align="center"></td><td align="right">1G，双工模式自适应</td></tr></tbody></table><p>单工：固定只能收只能发<br>半双工：同一时间内可以收或者发<br>全双工：同一时间内可以收和发</p><a id="more"></a><h3 id="网络协议"><a href="#网络协议" class="headerlink" title="网络协议"></a>网络协议</h3><h4 id="ISO组织"><a href="#ISO组织" class="headerlink" title="ISO组织"></a>ISO组织</h4><h4 id="OSI七层模型"><a href="#OSI七层模型" class="headerlink" title="OSI七层模型"></a>OSI七层模型</h4><p>分层的好处</p><table><thead><tr><th>模型</th><th>用途</th></tr></thead><tbody><tr><td>应用层</td><td>制定了各种应用协议（http/https/tenet等）</td></tr><tr><td>表示层</td><td>定义了数据格式，对数据进行加密</td></tr><tr><td>会话层</td><td>建立不同操作系统之间的会话</td></tr><tr><td>传输层</td><td>定义了两种连接方式（可靠连接和不可靠连接）（注意区别TCP/UDP）</td></tr><tr><td>网络层</td><td>CLMP（面向无连接的网络服务）不同介质的介入方式</td></tr><tr><td>数据链路层</td><td>将数据封装成数据帧，对接受到的数据进行校验</td></tr><tr><td>物理层</td><td>定义了各种介质、信号的模式接口的电子电器特性（接口的形状）</td></tr></tbody></table><h4 id="数据封装与数据的解封装"><a href="#数据封装与数据的解封装" class="headerlink" title="数据封装与数据的解封装"></a>数据封装与数据的解封装</h4><p>类比网上购物<br>卖家——货——包裹——快递公司封装成大箱——物流【数据封装】<br>物流——快递公司——快递员——货——买家【数据的解封装】</p><p><b>上层为下层提供了需求，下层为上层提供了服务</b></p><p>网络层：IP地址<br>数据链路层：MAC子层（媒体介入控制）LLC子层（数据链路控制）</p><p>消息Message<br>【Message】<br>【TCP/UDP头】【Message】——传输层 源、目的、端口<br>【IP包头】【TCP/UDP头】【Message】——网络层 源、目的、IP<br>【MAC子层】【IP包头】【TCP/UDP头】【Message】——数据链路层 源、目的、MAC<br>转换为【比特流】——物理层</p><h4 id="TCP-IP四层模型"><a href="#TCP-IP四层模型" class="headerlink" title="TCP/IP四层模型"></a>TCP/IP四层模型</h4><table><thead><tr><th>模型</th><th>用途</th><th>传输数据</th></tr></thead><tbody><tr><td>应用层</td><td>对应应用层</td><td></td></tr><tr><td>端到端层</td><td>对应传输层（TCP/UDP）</td><td>数据段TPDU</td></tr><tr><td>互联网层</td><td>对应网络层（IP协议）</td><td>报文</td></tr><tr><td>网络接口层</td><td>对应数据链路层和物理层</td><td>数据帧、比特流</td></tr></tbody></table><h3 id="线缆"><a href="#线缆" class="headerlink" title="线缆"></a>线缆</h3><h4 id="双绞线"><a href="#双绞线" class="headerlink" title="双绞线"></a>双绞线</h4><p>A类线序<br>B类线序（基本用B类）</p><p>两边线序相同为直通线，不同线序则为交叉线。<br>全反线 console线 一般连接设备使用<br>同层设备使用交叉线，不同层设备使用直通线。</p><p>网卡（NIC，网络接口卡）属于网络接口层，既包含物理层的特性，又拥有MAC地址即数据链路层的属性。</p><h4 id="以太网标准"><a href="#以太网标准" class="headerlink" title="以太网标准"></a>以太网标准</h4><table><thead><tr><th>名称</th><th>类型</th><th>最大传输距离（米）</th></tr></thead><tbody><tr><td>10Base-T</td><td>双绞线</td><td>100</td></tr><tr><td>100Base-TX</td><td>双绞线</td><td>100</td></tr><tr><td>1000Base-T</td><td>双绞线</td><td>100</td></tr><tr><td>1000Base-LX</td><td>单模光纤</td><td>5000</td></tr><tr><td>1000Base-SX</td><td>多模光纤</td><td>550</td></tr></tbody></table><p>CSMA/CD 带冲突检测的载波监听多路访问<br>集线器：所有接口处于同一个冲突域和广播域中<br>交换机：所有接口处于同一个广播域，每个接口都处于一个冲突域中<br>路由器：每个接口都处于一个冲突域和广播域中</p><h3 id="交换机"><a href="#交换机" class="headerlink" title="交换机"></a>交换机</h3><h4 id="交换机的工作原理"><a href="#交换机的工作原理" class="headerlink" title="交换机的工作原理"></a>交换机的工作原理</h4><p>二级交换机和三级交换机<br>交换机工作在数据链路层</p><p>MAC地址表：当pc1想要访问pc2时，交换机会先查找MAC地址表，如果有则直接转发数据帧，如果没有则进行广播查询，如果广播查询到后会进行学习，记录到自己的MAC地址表中。</p><h4 id="cisco的用户等级"><a href="#cisco的用户等级" class="headerlink" title="cisco的用户等级"></a>cisco的用户等级</h4><table><thead><tr><th>等级</th><th>相关信息</th></tr></thead><tbody><tr><td>0</td><td>最低等级，5条命令</td></tr><tr><td>1</td><td>20+条命令</td></tr><tr><td>2-14</td><td>能够使用的命令相同，没有太大差别</td></tr><tr><td>15</td><td>最高等级，使用所有命令</td></tr></tbody></table><h4 id="特权模式"><a href="#特权模式" class="headerlink" title="特权模式"></a>特权模式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">switch&gt;</span><br><span class="line">switch&gt; <span class="built_in">enable</span></span><br><span class="line">switch<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>用户模式切换为特权模式，等级为15</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">switch<span class="comment"># show running-config (show run)</span></span><br></pre></td></tr></table></figure><p>查看当前设备正在运行的配置<br>配置保存在内存内</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">switch<span class="comment"># show startup-config</span></span><br></pre></td></tr></table></figure><p>查看当前设备正在运行的配置<br>配置保存在flash内</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">switch<span class="comment"># copy running-config startup-config</span></span><br><span class="line">or</span><br><span class="line">switch<span class="comment"># write</span></span><br></pre></td></tr></table></figure><p>保存配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">switch<span class="comment"># reload</span></span><br></pre></td></tr></table></figure><p>重启设备</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">switch<span class="comment"># show mac-address-table</span></span><br></pre></td></tr></table></figure><p>查看交换机的MAC地址表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">switch<span class="comment"># show ip interface brief</span></span><br></pre></td></tr></table></figure><p>查看接口的摘要信息<br>FastEthernet 0/1 0是模块的信息，1是接口的信息<br>当后面的信息显示为up up时，表示可以使用。前面up对应物理层状态，后面的up对应数据链路层状态。<br>Vlan1的状态为administratively为down down，表示管理行为，需要手动开启。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">switch<span class="comment"># show clock</span></span><br><span class="line">switch<span class="comment"># clock set 9:20:00 JUN 21 2017</span></span><br></pre></td></tr></table></figure><p>特权模式可以修改的唯一参数，修改系统时间<br>NTP（网络时钟协议）</p><h4 id="全局模式"><a href="#全局模式" class="headerlink" title="全局模式"></a>全局模式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">switch<span class="comment"># config terminal (conf t)</span></span><br><span class="line">switch(config)<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>特权模式切换为全局模式，可以对交换机的整体系统参数进行修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">switch(config)<span class="comment"># hostname CCIE-SW1</span></span><br><span class="line">CCIE-SW1(config)<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>修改主机名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CCIE-SW1(config)<span class="comment"># no ip domain lookup</span></span><br></pre></td></tr></table></figure><p>关闭交换机的域名查找功能（实验用）<br>当拼错而导致卡住搜索域名时，组合键shift+ctrl+6回退到特权模式</p><h4 id="线路模式"><a href="#线路模式" class="headerlink" title="线路模式"></a>线路模式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CCIE-SW1(config)<span class="comment"># line console 0</span></span><br><span class="line">CCIE-SW1(config-line)<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>全局模式切换为线路模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CCIE-SW1(config-line)<span class="comment"># no exec-timeout</span></span><br></pre></td></tr></table></figure><p>登陆永不超时</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CCIE-SW1(config-line)<span class="comment"># logging syn</span></span><br></pre></td></tr></table></figure><p>日志同步</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CCIE-SW1(config-line)<span class="comment"># password cisco</span></span><br><span class="line">CCIE-SW1(config-line)<span class="comment"># login</span></span><br></pre></td></tr></table></figure><p>修改密码并生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CCIE-SW1(config)<span class="comment"># enable password cisco123</span></span><br></pre></td></tr></table></figure><p>修改全局密码，用户模式进入特权模式时输入（明文）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CCIE-SW1(config)<span class="comment"># enable secret cisco1234</span></span><br></pre></td></tr></table></figure><p>密文，在明文密文都设置时，密文的优先级更高</p><p>优化命令 可以在每次实验时先用这四条命令刷一次配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">no ip domain lookup</span><br><span class="line">line console 0</span><br><span class="line">no <span class="built_in">exec</span>-timeout</span><br><span class="line">logging syn</span><br></pre></td></tr></table></figure><p>tab 补全命令<br>? 系统提供的帮助<br>Ctrl+U 将光标前所有命令删除<br>Ctrl+A 将光标停留在一行的开头<br>Ctrl+E 将光标停留在一行的末尾<br>Ctrl+W 删除光标前的一个单词或一个数字</p><h3 id="telnet-远程调试设备"><a href="#telnet-远程调试设备" class="headerlink" title="telnet 远程调试设备"></a>telnet 远程调试设备</h3><h4 id="console线"><a href="#console线" class="headerlink" title="console线"></a>console线</h4><h4 id="vty线"><a href="#vty线" class="headerlink" title="vty线"></a>vty线</h4><p>虚拟私有终端<br>必须配置全局enable明文密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">switch(config)<span class="comment"># line vty 0 4</span></span><br><span class="line">switch(config-line)<span class="comment"># password cisco</span></span><br><span class="line">switch(config-line)<span class="comment"># exit</span></span><br><span class="line">switch(config)<span class="comment"># enable password cisco123</span></span><br></pre></td></tr></table></figure><p>编号从0到4，一共允许5台设备接入。</p><p>当有多台交换机需要维护时，需要对vlan1配置IP地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">switch(config)<span class="comment"># interface vlan 1 </span></span><br><span class="line">switch(config-if)<span class="comment"># ip address 192.168.10.1 255.255.255.0</span></span><br><span class="line">switch(config-if)<span class="comment"># no shutdown</span></span><br></pre></td></tr></table></figure><p>当设备进入时，可以使用show users来查看用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">switch<span class="comment"># clear line vty 1</span></span><br></pre></td></tr></table></figure><p>将用户踢除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">switch<span class="comment"># send * [enter]</span></span><br><span class="line">[ctrl+Z]</span><br></pre></td></tr></table></figure><p>给其他用户发送消息</p><p>设备互ping时，！表示通，.表示不通</p><h3 id="CDP协议"><a href="#CDP协议" class="headerlink" title="CDP协议"></a>CDP协议</h3><p>思科发现协议，构建设备之间的连接信息<br>用于传递路由条目，涉及到ODR按需路由</p><p>show cdp neighbor 查看CDP的邻居<br>show cdp neighbor detail 查看CDP的邻居的详细信息<br>clear cdp table 清除cdp表信息</p><h4 id="CDP表信息"><a href="#CDP表信息" class="headerlink" title="CDP表信息"></a>CDP表信息</h4><p>Device ID 邻居设备的主机名<br>Local Interface 自己连接到邻居的接口<br>Holdtime 邻居持续时间（默认时间为180s CDP消息每隔60s发送一次 如果180s之后没有收到消息 则刷新表项丢弃邻居）<br>Capability 可以看Capability Code的信息，R路由器，S交换机，空格为三层交换机<br>Platform 设备硬件型号<br>Port ID 邻居连接到自己的接口</p><h3 id="端口安全"><a href="#端口安全" class="headerlink" title="端口安全"></a>端口安全</h3><p>项目中未用到的接口全部shutdown<br>在正常使用中的端口全部启用端口安全<br>只允许特定MAC地址的设备能连接到交换机的特定接口，该类MAC地址称为合法MAC<br>当非法MAC连接时会有三种惩罚：shutdown、protect、restrict</p><h4 id="设置合法MAC"><a href="#设置合法MAC" class="headerlink" title="设置合法MAC"></a>设置合法MAC</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">switch(config)<span class="comment"># interface f0/1</span></span><br><span class="line">switch(config-if)<span class="comment"># switchport mode access // 指定f0/1为接入口</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">switch(config-if)<span class="comment"># shutdown</span></span><br><span class="line">switch(config-if)<span class="comment"># switchport port-security  // 开启端口安全</span></span><br><span class="line">switch(config-if)<span class="comment"># switchport port-security mac-address 0000.0000.0001 // 静态绑定MAC地址</span></span><br><span class="line">switch(config-if)<span class="comment"># switchport port-security violation shutdown // 设定惩罚模式为shutdown</span></span><br><span class="line">switch(config-if)<span class="comment"># no shutdown</span></span><br></pre></td></tr></table></figure><p>将交换机与PC的IP配置到同一个子网下后，交换机会动态学习其他PC的MAC地址到自己的MAC地址表</p><h4 id="快速配置合法MAC地址"><a href="#快速配置合法MAC地址" class="headerlink" title="快速配置合法MAC地址"></a>快速配置合法MAC地址</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">switch(config)<span class="comment"># interface f0/1</span></span><br><span class="line">switch(config-if)<span class="comment"># switchport port-security mac-address sticky // 把第一个学习到的MAC地址当做合法地址</span></span><br></pre></td></tr></table></figure><h4 id="非法MAC惩罚"><a href="#非法MAC惩罚" class="headerlink" title="非法MAC惩罚"></a>非法MAC惩罚</h4><ol><li><p>shutdown<br>当非法MAC连入f0/1时，使用交换机pingPC后，会发现端口关闭(状态down协议down)，查看show interface f0/1时会发现err-disable。这时当合法MAC连入，接口也不会改变状态，需要人为干预。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">switch(config)<span class="comment"># interface f0/1</span></span><br><span class="line">switch(config-if)<span class="comment"># shutdown</span></span><br><span class="line">switch(config-if)<span class="comment"># no shutdown</span></span><br></pre></td></tr></table></figure></li><li><p>protect<br>交换机接口状态不变，但是会静悄悄丢弃你收到的数据帧。</p></li><li><p>restrict<br>交换机会丢弃收到的数据帧，并且会产生系统日志。</p></li></ol><h4 id="vlan"><a href="#vlan" class="headerlink" title="vlan"></a>vlan</h4><p>创建vlan10</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">switch(config)<span class="comment"># vlan 10</span></span><br><span class="line">switch(config-vlan)<span class="comment"># exit</span></span><br><span class="line">switch(config)<span class="comment"># interface f0/1</span></span><br><span class="line">switch(config-if)<span class="comment"># switchport access vlan10</span></span><br><span class="line">switch(config-if)<span class="comment"># switchport mode access</span></span><br></pre></td></tr></table></figure><p>到交换机开启trunk（2960默认封装）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">switch(config)<span class="comment"># interface f0/1</span></span><br><span class="line">switch(config-if)<span class="comment"># switchport mode trunk</span></span><br></pre></td></tr></table></figure><h3 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h3><p>相同网段的数据通讯不需要经过网关，而不同网段则需要网关。<br>IP地址是设备在网络层的标识。<br>IP地址的地址长度为32比特，分为网络位（网段）和主机位（主机IP），用子网掩码进行区分。<br>IP地址的总体范围0.0.0.0到255.255.255.255，是点分十进制的格式。</p><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><p>单播IP地址（可配置的）<br>A类：1.0.0.0 到 126.255.255.255 默认掩码为255.0.0.0 私有地址为1.0.0.0 到 10.255.255.255<br>B类：128.0.0.0 到 191.255.255.255 默认掩码为255.255.0.0 私有地址为172.16.0.0 到 172.31.255.255<br>C类：192.0.0.0 到 223.255.255.255 默认掩码为255.255.255.0</p><p>组播IP地址（没有掩码，不可配置）<br>D类：224.0.0.0 到 239.255.255.255 私有地址为239.0.0.0 到 239.255.255.255<br>E类：240.0.0.0 到 240.255.255.255 以实验为目的</p><h3 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a>路由器</h3><p>路由器的一个接口占用一个网段<br>路由器的主要作用是转发不同网段的数据<br>主机位全0和全1不可用</p><p>127.0.0.1 到 127.255.255.255 内部回环地址，测试TCP/IP协议使用。<br>全1是当前网段的广播地址。<br>把数据包从一个网段转发到另一个网段的过程就叫做路由。</p><h4 id="静态路由"><a href="#静态路由" class="headerlink" title="静态路由"></a>静态路由</h4><p>路由表，在路由器中维护的路由条目。路由器会根据路由表进行路径选择。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[Router0]</span><br><span class="line">router(config)<span class="comment"># interface f0/1</span></span><br><span class="line">router(config-if)<span class="comment"># shutdown</span></span><br><span class="line">router(config-if)<span class="comment"># ip address 10.1.1.1</span></span><br><span class="line">router(config-if)<span class="comment"># no shutdown</span></span><br><span class="line"></span><br><span class="line">router(config)<span class="comment"># interface f0/0</span></span><br><span class="line">router(config-if)<span class="comment"># shutdown</span></span><br><span class="line">router(config-if)<span class="comment"># ip address 192.168.10.1</span></span><br><span class="line">router(config-if)<span class="comment"># no shutdown</span></span><br><span class="line"></span><br><span class="line">[PC0] ip:192.168.10.2</span><br><span class="line"></span><br><span class="line">[Router1]</span><br><span class="line">router(config)<span class="comment"># interface f0/1</span></span><br><span class="line">router(config-if)<span class="comment"># shutdown</span></span><br><span class="line">router(config-if)<span class="comment"># ip address 10.1.1.2</span></span><br><span class="line">router(config-if)<span class="comment"># no shutdown</span></span><br><span class="line"></span><br><span class="line">router(config)<span class="comment"># interface f0/0</span></span><br><span class="line">router(config-if)<span class="comment"># shutdown</span></span><br><span class="line">router(config-if)<span class="comment"># ip address 192.168.20.1</span></span><br><span class="line">router(config-if)<span class="comment"># no shutdown</span></span><br><span class="line"></span><br><span class="line">[PC1] ip:192.168.20.2</span><br></pre></td></tr></table></figure><p>配置静态路由表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">router(config)<span class="comment"># ip route 192.168.10.0 255.255.255.0 g0/1 // 不同网段的网段信息、掩码和出位置</span></span><br><span class="line">或</span><br><span class="line">router(config)<span class="comment"># ip route 192.168.10.0 255.255.255.0 10.1.1.1 // 不同网段的网段信息、掩码和目标IP</span></span><br></pre></td></tr></table></figure><h4 id="动态路由"><a href="#动态路由" class="headerlink" title="动态路由"></a>动态路由</h4><p>rip采用跳数作为唯一度量值，经过或者达到一台设备为一跳。<br>rip采用两种报文格式request和response<br>rip采用UDB端口号520发送数据<br>rip V1 采用广播发送数据<br>rip V2 采用组播发送数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">router(config)<span class="comment"># router rip</span></span><br><span class="line">router(config-router)<span class="comment"># version 2 // 申明版本</span></span><br><span class="line">router(config-router)<span class="comment"># no auto-summary // 关闭自动汇总</span></span><br><span class="line">router(config-router)<span class="comment"># network 192.0.0.0 // 主类宣告网段，必须依据类别和掩码！会根据宣告的地址找到对应的接口</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">router(config)<span class="comment"># ip route</span></span><br></pre></td></tr></table></figure><p>查看路由表，C是直连，R是RIP学习。120是rip的管理距离，1代表跳数（度量值）。<br>不同路由协议收到相同路由条目，比较管理距离。<br>相同路由协议收到相同路由条目，比较度量值。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Serial 串口&lt;/p&gt;&lt;h3 id=&quot;网络接口&quot;&gt;&lt;a href=&quot;#网络接口&quot; class=&quot;headerlink&quot; title=&quot;网络接口&quot;&gt;&lt;/a&gt;网络接口&lt;/h3&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;以太口&lt;/th&gt;&lt;th align=&quot;center&quot;&gt;网线接口&lt;/th&gt;&lt;th align=&quot;right&quot;&gt;其他&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Ethernet&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;以太口&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;10M，半双工口&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;FastEthernet&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;快速以太口&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;100M，双工模式自适应&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;GibitEthernet&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1G，双工模式自适应&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;单工：固定只能收只能发&lt;br&gt;半双工：同一时间内可以收或者发&lt;br&gt;全双工：同一时间内可以收和发&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习记录" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
      <category term="老坑迁移" scheme="http://yoursite.com/tags/%E8%80%81%E5%9D%91%E8%BF%81%E7%A7%BB/"/>
    
      <category term="Cisco" scheme="http://yoursite.com/tags/Cisco/"/>
    
      <category term="CCNA" scheme="http://yoursite.com/tags/CCNA/"/>
    
  </entry>
  
  <entry>
    <title>Oracle数据库基础学习笔记</title>
    <link href="http://yoursite.com/2016/07/18/Oracle-Learning-Basic/"/>
    <id>http://yoursite.com/2016/07/18/Oracle-Learning-Basic/</id>
    <published>2016-07-18T06:13:31.000Z</published>
    <updated>2019-09-23T12:58:39.320Z</updated>
    
    <content type="html"><![CDATA[<h3 id="学习顺序"><a href="#学习顺序" class="headerlink" title="学习顺序"></a>学习顺序</h3><ol><li>数据库搭建以及远程连接数据库</li><li>初步了解查询，单表查询结合简单过滤条件</li><li>进一步了解查询，单表查询结合函数</li><li>深入了解查询，多表查询结合子查询</li><li>DML操作 即增改删</li><li>数据隔离级别</li><li>附：如何使用脚本刷库</li></ol><a id="more"></a><hr><h3 id="数据库远程连接"><a href="#数据库远程连接" class="headerlink" title="数据库远程连接"></a>数据库远程连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">conn / as sysdba</span><br><span class="line">conn scott/tiger</span><br><span class="line">conn scott/tiger@10.10.10.2:1521/testdb</span><br><span class="line">alter user scott account unlock</span><br><span class="line">alter user scott account lock</span><br><span class="line"><span class="built_in">set</span> nls_lang=simplified chinese_china.zhs16gbk</span><br><span class="line"><span class="built_in">set</span> nls_lang=simplified american_america.al132utf8</span><br><span class="line">shutdown immediate</span><br><span class="line">start up</span><br><span class="line">host</span><br><span class="line"><span class="built_in">set</span> linesize 500</span><br><span class="line"><span class="built_in">set</span> pagesize 50</span><br></pre></td></tr></table></figure><h4 id="想要远程连接一个数据库："><a href="#想要远程连接一个数据库：" class="headerlink" title="想要远程连接一个数据库："></a>想要远程连接一个数据库：</h4><ol><li>数据库所在的机器必须创建一个监听器 Net Configuration Assistant</li><li>我的电脑——管理——服务——出现了…Listener的服务</li><li>cmd——lsnrctl——进入Listener Control环境</li><li>cmd——status——查看监听器状态，如果包含了目标数据库，则可以该数据库可以被连接。</li><li>在PL/SQL中连接10.10.10.2:1521/dfbb<br>（或者在宿主机cmd中输入conn scott/tiger@10.10.10.2:1521/dfbb 前提是宿主机中已安装了Oracle，若成功则会显示已连接）</li><li>当PL/SQL标题栏出现了<a href="mailto:scott@10.10.10.2" target="_blank" rel="noopener">scott@10.10.10.2</a>:1521/dfbb就表示成功</li><li>如果连不上，在其中工具——首选项——OCI库指明为instantclient/oci.dll</li></ol><h4 id="远程数据库连接的问题和处理方式："><a href="#远程数据库连接的问题和处理方式：" class="headerlink" title="远程数据库连接的问题和处理方式："></a>远程数据库连接的问题和处理方式：</h4><ol><li>网络不通（防火墙，机器没开，IP地址错误，网线断开等）</li><li>无监听程序，远程数据库必须创建一个监听器 Net Configuration Assisant</li><li>监听器中尚未包含目标数据库，等待。</li><li>本地无数据库</li><li>数据库已经关闭。<br>在对方机器上，使用sys连接本地数据库时，会连接到空闲例程，使用startup命令可打开数据库。</li><li>远程时会检查用户名密码，无用户或权限不足</li></ol><br>> 为了简化远程连接，可以在Oracle里的【Net Configuration Assisant】里的【服务名配置】中： > 添加一个服务器名（testdb），主机名（10.10.10.2），更改登陆（用户system 密码oracle），网络服务名（testdb000） > 之后可以直接 conn scott/tiger@testdb000<hr><h3 id="查询基础"><a href="#查询基础" class="headerlink" title="查询基础"></a>查询基础</h3><h4 id="数据类型："><a href="#数据类型：" class="headerlink" title="数据类型："></a>数据类型：</h4><ol><li>字符串<ul><li>char【定长】</li><li>varchar/varchar2【变长】</li></ul></li><li>数型 number<br>（P.S. number(7,2)中的意思表示，该数据有7位整数和2位小数）</li><li>日期 date</li></ol><h4 id="Select语句基础："><a href="#Select语句基础：" class="headerlink" title="Select语句基础："></a>Select语句基础：</h4><p>详细查看官方帮助文档（学会看语法图）</p><p>最简单的查询语句：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from emp;</span><br></pre></td></tr></table></figure><p>得到的结果称为查询结果集<br>查询结果集中，一行为一条记录，一列为一个字段</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select empno as eno, ename, sal esal from emp;</span><br></pre></td></tr></table></figure><p>其中eno称为empno的别名，esal为sal的别名<br>其别名可以使用as，也可以直接接在原名之后。<br>若要使用特殊符号，需添加双引号。<br>双引号还有强制区分大小写的作用，加上双引号之后，直接用不区分的方式将无法找到对应字段。查找时区分大小写或加上双引号。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select empno from emp;</span><br><span class="line">select * from emp <span class="built_in">where</span> ename = <span class="string">'SCOTT'</span>;</span><br><span class="line">select empno,ename,sal from emp <span class="built_in">where</span> ename = <span class="string">'SCOTT'</span>;</span><br><span class="line">select distinct ename,deptno from emp;</span><br></pre></td></tr></table></figure><p>当查询结果集中，两条记录的所有字段都相同，才认为记录重复。<br>在条件筛选时，区分大小写！区分！区分！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">drop table emp01</span><br><span class="line">purge recyclebin</span><br><span class="line">desc emp</span><br></pre></td></tr></table></figure><h3 id="过滤查询"><a href="#过滤查询" class="headerlink" title="过滤查询"></a>过滤查询</h3><ol><li><p>算数运算</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">where</span> sal + 1000 = 4000</span><br></pre></td></tr></table></figure></li><li><p>比较运算</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">where</span> sal &gt; 3000</span><br><span class="line"><span class="built_in">where</span> sal &lt;&gt; 3000</span><br><span class="line"><span class="built_in">where</span> sal between 1000 and 2000</span><br><span class="line"><span class="built_in">where</span> sal <span class="keyword">in</span> (800, 950, 2000, 3000, 4000)</span><br></pre></td></tr></table></figure><p>between and语句相当于闭区间<br>in用于匹配离散值</p></li><li><p>逻辑运算</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">where</span> not sal = 3000</span><br></pre></td></tr></table></figure></li><li><p>空值判断</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">where</span> comm is null</span><br><span class="line"><span class="built_in">where</span> comm <span class="keyword">in</span>(300, 500, null)</span><br><span class="line"><span class="built_in">where</span> comm not <span class="keyword">in</span> (300, 500, null)</span><br></pre></td></tr></table></figure><p>空值不可以用=/&lt;&gt;而必须使用is/is not</p></li><li><p>模糊匹配</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">where</span> ename like <span class="string">'%S%'</span></span><br><span class="line"><span class="built_in">where</span> ename like <span class="string">'%\%%'</span> escape <span class="string">'\'</span></span><br></pre></td></tr></table></figure><p>%表示任意个任意字符，_表示单个任意字符<br>转义字符\</p></li><li><p>连字符运算</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select ename,ename,ename || <span class="string">'---'</span> from emp;</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>Attention：算数运算、模糊查询会忽略空值，连字符运算不会。</p></blockquote><h3 id="排序子句"><a href="#排序子句" class="headerlink" title="排序子句"></a>排序子句</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from emp order by sal;</span><br></pre></td></tr></table></figure><p>可以字段名，也可以是别名和字段号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from emp order by deptno desc;</span><br><span class="line">select * from emp order by deptno desc, sal desc;</span><br></pre></td></tr></table></figure><p>多字段时，先根据deptno，再根据sal来排序</p><blockquote><p>Attention：select … from … where … order by …</p></blockquote><h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4><ol><li>单行函数</li><li>多行函数（分组/聚合函数）</li><li>分析函数</li></ol><ul><li>dual函数，只有一条记录一个字段，用于进行计算或者返回值。</li></ul><h3 id="单行函数"><a href="#单行函数" class="headerlink" title="单行函数"></a>单行函数</h3><br>#### 字符类 1. upper/lower【大/小写】<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select upper (<span class="string">'abcDEfg00aa中文'</span>) from dual;</span><br><span class="line">select lower (<span class="string">'abcDEfg00aa中文'</span>) from dual;</span><br></pre></td></tr></table></figure><ol start="2"><li><p>initcap【单词首字母大写 空格、下划线、中文后都认为是新单词】</p></li><li><p>substr【取子串】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select substr(<span class="string">'abcdefg0123'</span> , -3) from dual;</span><br><span class="line">select substr(<span class="string">'abcdefg0123'</span> , 3) from dual;</span><br><span class="line">select substr(<span class="string">'abcdefg0123'</span> , 3 , 3) from dual;</span><br></pre></td></tr></table></figure></li><li><p>length【长度】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select length(<span class="string">'abc悟空'</span>) from dual;</span><br><span class="line">select lengthb(<span class="string">'abc悟空'</span>) from dual;</span><br></pre></td></tr></table></figure></li><li><p>instr【取子串的索引下标】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select instr( <span class="string">'abcdefg'</span> , <span class="string">'efg'</span> ) from dual;</span><br><span class="line">select instr( <span class="string">'abcdefgabcdefg'</span> , <span class="string">'efg'</span> , 6) from dual;</span><br></pre></td></tr></table></figure></li><li><p>lpad/rpad</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select lpad( <span class="string">'abcd'</span> , 10 , <span class="string">'-='</span> ) from dual;</span><br></pre></td></tr></table></figure></li><li><p>ltrim/rtrim/trim</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select ltrim( <span class="string">'      abcd   bbb  ccc   '</span> ) from dual;</span><br><span class="line">select ltrim( <span class="string">'aaaabbbccccdddbbbaa'</span> , <span class="string">'ba'</span> ) from dual;</span><br><span class="line">select trim( <span class="string">'a'</span> from <span class="string">'aaaabbbccccdddbbbaa'</span> ) from dual;</span><br><span class="line">select trim( leading <span class="string">'a'</span> from <span class="string">'aaaabbbccccdddbbbaa'</span> ) from dual;</span><br><span class="line">select trim( trailing <span class="string">'a'</span> from <span class="string">'aaaabbbccccdddbbbaa'</span> ) from dual;</span><br></pre></td></tr></table></figure></li><li><p>ascii()/charas()</p></li><li><p>replace</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select replace( <span class="string">'acca01aabdji2ab03duab'</span> , <span class="string">'ab'</span> , <span class="string">'八戒'</span> ) from dual;</span><br><span class="line">select translate( <span class="string">'acca01aabdji2ab03duab'</span> , <span class="string">'ab'</span> , <span class="string">'八戒'</span> ) from dual;</span><br></pre></td></tr></table></figure></li></ol><br>#### 数值类 1. round【四舍五入】/ trunc【截断】/ mod【取模】<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select round(100.4567) from dual;结果为100</span><br><span class="line">select round(100.5567 , 2) from dual;结果为100.56</span><br><span class="line">select trunc(100.4567 , 2) from dual;结果为100.55</span><br></pre></td></tr></table></figure><br>#### 日期类 1. sysdate【服务器时间】<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select sysdate from dual;</span><br><span class="line">select sysdate + 100 from dual;</span><br></pre></td></tr></table></figure><pre><code>支持以天为单位进行算术运算。</code></pre><ol start="2"><li><p>to_char(sysdate , ‘模式字符’) 【显示转换函数】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select sysdate to_char(sysdate , <span class="string">'yyyy-mm-dd hh24:mi:ss'</span>) from dual;</span><br></pre></td></tr></table></figure></li><li><p>current_date【当前客户端的时区】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select current_date to_char(sysdate , <span class="string">'yyyy-mm-dd hh24:mi:ss'</span>) from dual;</span><br></pre></td></tr></table></figure></li><li><p>months_between【两个日期之间有多少个月】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select round( months_between(sysdate , hiredate) ) from dual;</span><br></pre></td></tr></table></figure></li><li><p>add_months【加/减月份】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select add_mounths( sysdate , 3 ) to_char(sysdate , <span class="string">'yyyy-mm-dd hh24:mi:ss'</span>) from dual;</span><br><span class="line">select add_mounths( sysdate , -3 ) to_char(sysdate , <span class="string">'yyyy-mm-dd hh24:mi:ss'</span>) from dual;</span><br></pre></td></tr></table></figure></li><li><p>to_date【字符串转换为日期】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select to_date( <span class="string">'2016-2-2'</span> , <span class="string">'yyyy-mm-dd'</span> ) from dual;</span><br></pre></td></tr></table></figure></li><li><p>next_day【下一个的，一周中的第几天】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select to_char( next_day( <span class="string">'2016-2-2'</span> , <span class="string">'yyyy-mm-dd'</span> , 5) , <span class="string">'yyyy-mm-dd'</span> ) from dual;</span><br></pre></td></tr></table></figure></li><li><p>last_day【某月中的最后一天】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select to_char( last_day( <span class="string">'2016-7-14'</span> , <span class="string">'yyyy-mm-dd'</span> , 5) , <span class="string">'yyyy-mm-dd'</span> ) from dual;</span><br></pre></td></tr></table></figure></li><li><p>round【在天数上对时间进行四舍五入】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select to_char( round( to_date( <span class="string">'2016-7-13 11:59:59'</span> , <span class="string">'yyyy-mm-dd hh24:mi:ss'</span> ) ) ,  <span class="string">'yyyy-mm-dd hh24:mi:ss'</span> ) from dual;</span><br><span class="line">select to_char( round( to_date( <span class="string">'2016-7-13 11:59:59'</span> , <span class="string">'yyyy-mm-dd hh24:mi:ss'</span> ) , <span class="string">' mm'</span>) ,  <span class="string">'yyyy-mm-dd hh24:mi:ss'</span> ) from dual;</span><br></pre></td></tr></table></figure></li><li><p>extract【提取年月日】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select extract(month from sysdate) from dual;</span><br><span class="line">select extract(minutes from systimestamp) from dual;</span><br></pre></td></tr></table></figure></li><li><p>systimestamp【可包含毫秒信息】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select systimestamp to_char(sysdate , <span class="string">'yyyy-mm-dd hh24:mi:ss.ff3'</span>) from dual;</span><br></pre></td></tr></table></figure></li></ol><br>#### 通用类函数 1. nvl(comm,0) 2. nvl2(comm,0,1) 3. case 等值case decode 条件case<br>### 分组/聚合函数 > 所有的分组/聚合函数忽略空值！<ol><li><p>max() / min() / avg() / sum()</p></li><li><p>count()【返回记录条数】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">count( distinct deptno)</span><br></pre></td></tr></table></figure></li><li><p>avg( nvl(comm,0) )【解决忽略空值的问题】</p></li><li><p>group by</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">avg(sal) from emp group by deptno【分组求平均工资】</span><br></pre></td></tr></table></figure><p>select list中的非聚合字段必须出现在group by表达式，否则会出现错误。<br>①不是单组分组：没有group by语句<br>②不是group by表达式：没有放到group by语句中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">where</span> sal &gt; 2000 group by deptno having avg(sal) &gt; 2000</span><br></pre></td></tr></table></figure><p>只有sal &gt;2000 的记录才会参加分组<br>分组中只有avg(sal) &gt; 2000 的才会显示</p></li><li><p>rollup()【上卷，对第一个字段的每个分组进行一次小计】</p></li><li><p>cube()【对所有分组字段都进行小计】</p></li></ol><br>### 多表查询基础<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from emp, dept;</span><br><span class="line">select * from emp cross join dept;</span><br></pre></td></tr></table></figure><pre><code>查询结果集中，所有字段是两表字段之和，A表的每条记录会与B表的每条记录组合（即笛卡尔积）</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from emp , dept <span class="built_in">where</span> emp.deptno = dept.deptno;</span><br><span class="line">select * from emp e , dept d <span class="built_in">where</span> e.deptno = d.deptno;</span><br></pre></td></tr></table></figure><p>多表查询一般都使用where带条件进行过滤，n张表连接至少需要n-1个条件，之间用and连接</p><blockquote><p>Attention：当字段名唯一时，可不限定表名/别名。</p></blockquote><h3 id="Oracle-Theta语法"><a href="#Oracle-Theta语法" class="headerlink" title="Oracle Theta语法"></a>Oracle Theta语法</h3><ol><li><p>等值连接【又称内连接】【忽略空值】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from emp , dept <span class="built_in">where</span> emp.deptno = dept.deptno</span><br></pre></td></tr></table></figure></li><li><p>不等连接【忽略空值】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from emp e, salgrade sg <span class="built_in">where</span> s.sal &gt;= sg.losal and sal &lt;= hisal;</span><br><span class="line">select * from emp e, salgrade sg <span class="built_in">where</span> sal between losal and hisal;</span><br></pre></td></tr></table></figure></li><li><p>左连接 / 右连接【又可称左外连接】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from emp , dept <span class="built_in">where</span> emp.deptno = dept.deptno(+);</span><br></pre></td></tr></table></figure><p>A表左连接B表【B表右连接A表】，则(+)放在B表一端。<br>查询结果集中，会包含A表中所有的记录。在不满足连接条件的情况下，B表对应的所有字段为null</p></li><li><p>自连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">elect e1.empno , e1.ename , e1.sal , e2.empno , e2.ename from emp e1 , emp e2 <span class="built_in">where</span> e1.mgr = e2.empno</span><br></pre></td></tr></table></figure><p>把emp这张表作为两张，往往是表中记录有层级关系。</p></li></ol><br>### SQL92语法 1. natural join 自然连接<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from emp natural join emp01</span><br></pre></td></tr></table></figure><pre><code>自动使用两表的相同字段进行等值连接【注意：空值查不出】</code></pre><ol start="2"><li><p>join/using 子句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from emp join emp01 using (empno);</span><br><span class="line">select * from emp join emp01 using (ename);</span><br></pre></td></tr></table></figure><p>指定使用哪些字段进行等值连接</p></li><li><p>join/on 子句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from emp e join dept d on e.deptno = d.deptno;</span><br><span class="line">select * from emp e left (outer) join dept d on e.deptno = d.deptno;</span><br><span class="line">select * from emp e full join dept d on e.deptno = d.deptno;</span><br></pre></td></tr></table></figure></li></ol><p>用SQL92语法实现左连接，与Oracle Theta不同，AB两表的记录都全部显示，对应不符合连接条件的，字段为空值。</p><br>#### 连接条件和过滤条件的区别<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from emp e join dept d on e.deptno = d.deptno <span class="built_in">where</span> e.sal &gt; 2000;</span><br><span class="line">select * from emp e join dept d on e.deptno = d.deptno and e.sal &gt; 2000;</span><br></pre></td></tr></table></figure><ul><li>where是过滤条件在笛卡尔积中进行过滤，满足条件的被筛选出来放入查询结果集</li><li>and是连接条件</li><li>P.S. 在左连接时可看到区别！</li></ul><br>### 层次查询 - 伪列<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select e.* , level from emp e start with empno = 7839 connect by prior empno = mgr;</span><br></pre></td></tr></table></figure><p>start with指明从7839开始，找7839的下属；<br>判断下属的条件是prior empno = mgr；<br>connect by是递归，找到记录之后以该记录作为新起点继续。（DFS）<br>自顶向下查询</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select lpad ( ename , length(ename) + level * 2 , <span class="string">'-'</span> ) from emp start with ename = <span class="string">'SMITH'</span> connect by prior mgr = empno;</span><br></pre></td></tr></table></figure><p>自底向上查询</p><ul><li>剪枝<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select lpad ( ename , length(ename) + level * 2 , <span class="string">'-'</span> ) from emp start with empno = 7839 connect by prior mgr = empno and ename &lt;&gt; <span class="string">'JONES'</span> ;</span><br></pre></td></tr></table></figure></li></ul><p>去除JONES这一条分支，找到JONES就不再向下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select lpad ( ename , length(ename) + level * 2 , <span class="string">'-'</span> ) from emp <span class="built_in">where</span> ename &lt;&gt; <span class="string">'JONES'</span> start with empno = 7839 connect by prior mgr = empno ;</span><br></pre></td></tr></table></figure><p>去除JONES这一个，JONES的下属仍保留</p><ul><li>connect_by_isleaf<br>0是父亲结点，1是叶子结点</li></ul><br>#### 查询结果集运算 1. union 并集 2. intersect 交集 3. minus 差集 > Attention：要求个数相同、类型相容<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select * from emp</span><br><span class="line">union</span><br><span class="line">select * from emp01</span><br><span class="line">order by 1;</span><br></pre></td></tr></table></figure><br>### 子查询 把复杂的查询在逻辑上分为多个子查询 几乎可以用于所有子句中 - select - from - where - having - order by<ol><li><p>标准子查询<br>子查询只执行一次，其结果代入主查询替换。</p></li><li><p>关联子查询<br>在子查询的内部用到了外部/主查询中的表。<br>将主查询得到的记录，代入子查询内部进行了一次子查询，该结果替换后再执行了主查询，得到结果。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select empno, ename, sal, (select avg(sal) from emp e2 <span class="built_in">where</span> e2.deptno = e1.deptno) from emp e1;</span><br><span class="line">select * from emp e1 <span class="built_in">where</span> empno <span class="keyword">in</span> (select mgr from emp e2);</span><br><span class="line">select * from emp e1 <span class="built_in">where</span> empno not <span class="keyword">in</span> (select mgr from emp e2);【Null值陷阱】</span><br><span class="line">select * from emp e1 <span class="built_in">where</span> empno not <span class="keyword">in</span> (select nvl( mgr,0 ) from emp e2);</span><br></pre></td></tr></table></figure><p>存在性判定exists</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select e1.* from emp e1 <span class="built_in">where</span> exists(select 1 from emp e2 <span class="built_in">where</span> e1.empno = e2.mgr);</span><br></pre></td></tr></table></figure><p>每一条记录都判断exists中的子查询结果集是否为null，为null则不将该记录放入查询结果集。<br>可以使用not，没有Null值陷阱</p></li><li><p>单行子查询</p></li><li><p>多行子查询</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select d.*, avg_sal</span><br><span class="line">   from dept d, (select deptno,avg(sal) avg_sal from emp group by deptno) xx</span><br><span class="line">   <span class="built_in">where</span> d.deptno = xx.deptno;</span><br><span class="line">select * from emp <span class="built_in">where</span> (deptno, job) = (select deptno, job from emp <span class="built_in">where</span> ename = <span class="string">'SCOTT'</span>);</span><br></pre></td></tr></table></figure></li><li><p>和all/any组合查询</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from emp <span class="built_in">where</span> sal &gt; (select max(sal) from emp <span class="built_in">where</span> deptno = 20);</span><br><span class="line">select * from emp <span class="built_in">where</span> sal &gt; all (select * from emp <span class="built_in">where</span> deptno = 20);</span><br><span class="line">select * from emp <span class="built_in">where</span> sal &lt; any (select * from emp <span class="built_in">where</span> deptno = 20);</span><br></pre></td></tr></table></figure></li></ol><br>### 分页查询<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select e.*, rounum from emp e;</span><br><span class="line">select e.* , rownum from emp e <span class="built_in">where</span> rownum &lt;= 5;</span><br></pre></td></tr></table></figure><p>分配rownum必须包括1，并且在where条件判断之前生成（order by 在where之后生成）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from ( select e1.*, rownum rn from (select * from emp order by sal desc) e1) <span class="built_in">where</span> rn between 6 and 10;</span><br></pre></td></tr></table></figure><br>### 分析函数<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from ( select e1.*, row_number() over(order by sal desc) rn from emp e1) <span class="built_in">where</span> rn = 2;</span><br><span class="line">select e.*, rownum from (select e1.*, rownum from emp e1 order by sal desc) e;</span><br><span class="line">select e.* , rownum from emp e order by sal desc;</span><br></pre></td></tr></table></figure><br>### DML操作 - 插入 - 删除 - 修改 - 合并（上面三种操作的合并）<br>#### 单表单行插入<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">insert into emp01 values(9001, <span class="string">'JJY01'</span>, <span class="string">'临时工'</span>, 7788, <span class="string">'11-11月-16'</span>, 7000, null, 20); </span><br><span class="line">insert into emp01(empno, ename, sal) values(9002, <span class="string">'JJY02'</span>, 8000);</span><br><span class="line">insert into emp01(empno, ename, sal) values(9003, default, 7000);</span><br></pre></td></tr></table></figure><p>如果没有指明插入哪些字段，则必须填入所有字段的值，并且要遵照字段顺序。（注意隐式转换的特性）<br>default表示空串，和null也是一个意思。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alter table emp01 modify (job varchar2(9) default <span class="string">'临时工'</span>);</span><br><span class="line">insert into emp01(empno, ename, sal) values(9003, <span class="string">'JJY02'</span>, 6666);</span><br><span class="line">insert into emp01(empno, ename, sal, job) values(9003, <span class="string">'JJY02'</span>, 6666, default);</span><br></pre></td></tr></table></figure><p>修改表中job字段的默认值，对此前已有的字段不产生影响</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">insert into emp01(empno, ename, sal) values(9004, <span class="string">'&amp;ename000'</span>, 9999);</span><br><span class="line">[input] JJY03</span><br><span class="line">insert into emp01(empno, ename, sal) values(9004, <span class="string">'JJY03'</span>, 9999);</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">insert into emp01(empno, ename, sal) values(9005, &amp;ename000, 8888);</span><br><span class="line">[input] <span class="string">'JJY04'</span></span><br><span class="line">insert into emp01(empno, ename, sal) values(9005, <span class="string">'JJY04'</span>, 8888);</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">insert into emp01(empno, ename, sal) values(9006, <span class="string">'&amp;&amp;ename111'</span>, 7777);</span><br><span class="line">[input] JJY05</span><br><span class="line">insert into emp01(empno, ename, sal) values(9006, <span class="string">'JJY05'</span>, 7777);</span><br></pre></td></tr></table></figure><p>此后只要用到了ename111，就直接使用输入的值，使用时用&amp;ename111。<br>相当于在SQLplus下申明了一个变量，退出数据库后自动清除。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into emp01(empno, ename, sal) values(9007, <span class="string">'&amp;ename111'</span>, 6666);</span><br></pre></td></tr></table></figure><br>##### 单表多行插入<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">insert into emp01 select * from emp <span class="built_in">where</span> sal &gt;= 3000;</span><br><span class="line">insert into emp01 (empno, ename, sal, job, deptno) select empno, ename, sal, job, deptno from emp <span class="built_in">where</span> sal &gt;= 3000;</span><br></pre></td></tr></table></figure><p>使用了子查询，代码中不能再使用values<br><br></p><h4 id="多表插入（应用很少）"><a href="#多表插入（应用很少）" class="headerlink" title="多表插入（应用很少）"></a>多表插入（应用很少）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">insert all into emp01(empno, ename, sal) values(eno, ename, esal)</span><br><span class="line">into emp02(empno, ename, job, deptno) value(eno, ename, esal, ejob, dno)</span><br><span class="line">select empno eno, ename, job ejob, sal esal, deptno dno from emp <span class="built_in">where</span> sal &gt;= 2000;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">insert all when esal &gt; 2000 <span class="keyword">then</span></span><br><span class="line">into emp01(empno, ename, sal) values(eno, ename, esal)</span><br><span class="line">when esal &gt; 1500 <span class="keyword">then</span></span><br><span class="line">into emp02(empno, ename, sal, job, deptno) values(eno, ename, esal, ejob, dno)</span><br><span class="line">select empno eno, ename, job ejob, sal esal, deptno dno from emp;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">insert first when esal &gt; 2000 <span class="keyword">then</span></span><br><span class="line">into emp01(empno, ename, sal) values(eno, ename, esal)</span><br><span class="line">when esal &gt; 1500 <span class="keyword">then</span></span><br><span class="line">into emp02(empno, ename, sal, job, deptno) values(eno, ename, esal, ejob, dno)</span><br><span class="line">select empno eno, ename, job ejob, sal esal, deptno dno from emp;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">insert into emp01(empno, ename, sal)</span><br><span class="line">select 9001, <span class="string">'JJY01'</span>, 8000 from dual [ = select 1 from dual ]</span><br><span class="line">union</span><br><span class="line">select 9002, <span class="string">'JJY02'</span>, 8000 from dual</span><br><span class="line">union</span><br><span class="line">select 9003, <span class="string">'JJY03'</span>, 7000 from dept;</span><br></pre></td></tr></table></figure><br>#### 修改<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">update emp01 <span class="built_in">set</span> comm = 10000;</span><br><span class="line">update emp01 <span class="built_in">set</span> comm = 10000 <span class="built_in">where</span> ename = <span class="string">'JJY01'</span> ;</span><br></pre></td></tr></table></figure><br>#### 删除<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">delete emp01 <span class="built_in">where</span> empno = 9001;</span><br><span class="line">delete emp01;</span><br><span class="line">truncate table emp01; [ = delete emp01 ]</span><br></pre></td></tr></table></figure><p>比delete删除全表时，效率更高！<br><br></p><h4 id="合并（了解即可）"><a href="#合并（了解即可）" class="headerlink" title="合并（了解即可）"></a>合并（了解即可）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">merge into emp01</span><br><span class="line">using emp e</span><br><span class="line">on (emp01.emono = e.empno)</span><br><span class="line">when matched <span class="keyword">then</span></span><br><span class="line">update <span class="built_in">set</span> sal = e.sal</span><br><span class="line">delete <span class="built_in">where</span> sal &gt; 1500</span><br><span class="line">when not matched <span class="keyword">then</span></span><br><span class="line">insert (empno, ename, sal) into emp01</span><br></pre></td></tr></table></figure><br>#### 事务 1. commit 2. set autocommit on 3. rollback 4. savepoint b<br>### 数据隔离级别 - 读未提交 - 读已提交√ - 可重复读 - 序列化度√<br>#### 读取问题 - 没有提交的数据被读取了：賍读 - 在同一个事务下，多次执行同一条语句，结果中的值产生变化：不可重复读 - 在同一个事务下，多次执行同一条语句，得到的结果不同：幻读<br>### 数据恢复 在Oracle安装目录下，找到RDBMS—ADMIN—scott.sql，正常执行此文件即可。 方法： 1. 新建一个批处理文件 initDB.bat 2. 内容：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> NLS_LANG=SIMPILIFIED CHINESE_CHINA.ZHS16GBK</span><br><span class="line">sqlplus sys/oracle@testdb as sysdba @scott.sql &gt; initDB.log</span><br></pre></td></tr></table></figure><ol start="3"><li>对scott.sql进行修改<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[line18] rem SET TERMOUT OFF</span><br><span class="line">[line27] CONNECT scott/tiger@testdb</span><br><span class="line">[line28] DROP TABLE DEPT cascade constraints;</span><br><span class="line">[line52-79] 修改好日期格式</span><br><span class="line">[line end] quit;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;学习顺序&quot;&gt;&lt;a href=&quot;#学习顺序&quot; class=&quot;headerlink&quot; title=&quot;学习顺序&quot;&gt;&lt;/a&gt;学习顺序&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;数据库搭建以及远程连接数据库&lt;/li&gt;&lt;li&gt;初步了解查询，单表查询结合简单过滤条件&lt;/li&gt;&lt;li&gt;进一步了解查询，单表查询结合函数&lt;/li&gt;&lt;li&gt;深入了解查询，多表查询结合子查询&lt;/li&gt;&lt;li&gt;DML操作 即增改删&lt;/li&gt;&lt;li&gt;数据隔离级别&lt;/li&gt;&lt;li&gt;附：如何使用脚本刷库&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习记录" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
      <category term="老坑迁移" scheme="http://yoursite.com/tags/%E8%80%81%E5%9D%91%E8%BF%81%E7%A7%BB/"/>
    
      <category term="Oracle" scheme="http://yoursite.com/tags/Oracle/"/>
    
      <category term="SQL" scheme="http://yoursite.com/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>PHP基础学习笔记</title>
    <link href="http://yoursite.com/2016/07/17/PHP-Learning-Basic/"/>
    <id>http://yoursite.com/2016/07/17/PHP-Learning-Basic/</id>
    <published>2016-07-17T14:12:35.000Z</published>
    <updated>2019-09-23T12:58:45.368Z</updated>
    
    <content type="html"><![CDATA[<p>暑假里帮南林记忆做了软件著作权的申请，顺便就开始了php的学习之路。<br>HTML5基础一点点，从w3cschool开始自学，顺便用博客防止自己摸鱼或者半路弃坑。</p><a id="more"></a><h3 id="关于安装"><a href="#关于安装" class="headerlink" title="关于安装"></a>关于安装</h3><p><strong>PHP 服务器组件</strong><br><font size="2">选用了<a href="http://www.wampserver.com/en/" title="WampServer-En" target="_blank" rel="noopener">WampServer</a><br>需要注意的是，在安装Apache的时候计算机中要求有VC库。我当时机子里就没有，在网上找到了正确的解决方案，顺便提供一下备份<a href="https://pan.baidu.com/s/1jInnNRC" title="VC-redist" target="_blank" rel="noopener">网盘</a></font><br><strong>PHP IDE</strong><br><font size="2">Eclipse</font><br><strong>MySql管理工具</strong><br><font size="2">Navicat，然而还没装。</font><br><strong>文本编辑器</strong><br><font size="2">直接用Sublime Text。</font></p><br>### 关于自学 自学网站[w3cschool](http://www.runoob.com/php/php-tutorial.html) 网上好像有其他奇怪的相似域名，感觉这款应该是正宗的，它改域名了现在叫菜鸟教程。<br>### 第一部分 语法基础 #### 基本框架<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;? php</span><br><span class="line">// code of php</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><font size="2">PHP可以和HTML标签混合使用</font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;? php</span><br><span class="line">// code of php</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;暑假里帮南林记忆做了软件著作权的申请，顺便就开始了php的学习之路。&lt;br&gt;HTML5基础一点点，从w3cschool开始自学，顺便用博客防止自己摸鱼或者半路弃坑。&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="学习记录" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
      <category term="老坑迁移" scheme="http://yoursite.com/tags/%E8%80%81%E5%9D%91%E8%BF%81%E7%A7%BB/"/>
    
  </entry>
  
</feed>
